{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\crled\\\\OneDrive\\\\Escritorio\\\\Dev\\\\Cursos\\\\projectnext\\\\pages\\\\users\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-fetch';\n\nvar UserProfile = function UserProfile() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }\n  }, \"Profile\");\n};\n\n_s(UserProfile, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = UserProfile;\n\nUserProfile.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resJSON;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://reqres.in/api/users/\".concat(ctx.query.id));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            resJSON = _context.sent;\n            return _context.abrupt(\"return\", {\n              user: resJSON.data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["C:/Users/crled/OneDrive/Escritorio/Dev/Cursos/projectnext/pages/users/[id].js"],"names":["useRouter","fetch","UserProfile","router","id","query","getInitialProps","ctx","res","json","resJSON","user","data"],"mappings":";;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAEtB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAFsB,MAGfI,EAHe,GAGTD,MAAM,CAACE,KAHE,CAGfD,EAHe;AAKtB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,CAND;;GAAMF,W;UAEaF,S;;;KAFbE,W;;AAQNA,WAAW,CAACI,eAAZ;AAAA,sEAA8B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRN,KAAK,uCAAgCM,GAAG,CAACF,KAAJ,CAAUD,EAA1C,EADG;;AAAA;AACpBI,YAAAA,GADoB;AAAA;AAAA,mBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEpBC,YAAAA,OAFoB;AAAA,6CAGnB;AAACC,cAAAA,IAAI,EAAED,OAAO,CAACE;AAAf,aAHmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeV,WAAf","sourcesContent":["import {useRouter} from 'next/router';\r\nimport fetch from 'isomorphic-fetch';\r\n\r\nconst UserProfile = () => {\r\n\r\n    const router = useRouter();\r\n    const {id} = router.query;\r\n\r\n    return <h1>Profile</h1>\r\n}\r\n\r\nUserProfile.getInitialProps = async(ctx) => {\r\n    const res = await fetch(`https://reqres.in/api/users/${ctx.query.id}`)\r\n    const resJSON = await res.json();\r\n    return {user: resJSON.data};\r\n}\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}